id [A : Type] [x : A] : A := x
const [A B : Type] [x : A] B : A := x

comp [A B C : Type] [f : A -> B] [g : B -> C] [x : A] : C := (
  g (f x)
)

depcomp [A : Type][B : A -> Type][C : (x : A) -> B x -> Type]
        [f : (x : A) -> (y : B x) -> C x y]
        [g : (x : A) -> B x]
        [x : A]
        : C x (g x) :=
  (f x (g x))
